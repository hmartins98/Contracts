// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.11.4
// source: github.com/hmartins98/Contracts/Customer/Customer.proto

package Customer

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	CustomTypes "github.com/hmartins98/Contracts/CustomTypes"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Customer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         *CustomTypes.GUID             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                       string                        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BirthDate                  *CustomTypes.DATETIME         `protobuf:"bytes,3,opt,name=birth_date,json=birthDate,proto3" json:"birth_date,omitempty"`
	TypeId                     int32                         `protobuf:"varint,4,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	CustomerPhoneContacts      []*CustomerPhoneContacts      `protobuf:"bytes,5,rep,name=customer_phone_contacts,json=customerPhoneContacts,proto3" json:"customer_phone_contacts,omitempty"`
	CustomerAddress            []*CustomerAddress            `protobuf:"bytes,6,rep,name=customer_address,json=customerAddress,proto3" json:"customer_address,omitempty"`
	CustomerPaymentCredentials []*CustomerPaymentCredentials `protobuf:"bytes,7,rep,name=customer_payment_credentials,json=customerPaymentCredentials,proto3" json:"customer_payment_credentials,omitempty"`
}

func (x *Customer) Reset() {
	*x = Customer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_hmartins98_Contracts_Customer_Customer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Customer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Customer) ProtoMessage() {}

func (x *Customer) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_hmartins98_Contracts_Customer_Customer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Customer.ProtoReflect.Descriptor instead.
func (*Customer) Descriptor() ([]byte, []int) {
	return file_github_com_hmartins98_Contracts_Customer_Customer_proto_rawDescGZIP(), []int{0}
}

func (x *Customer) GetId() *CustomTypes.GUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Customer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Customer) GetBirthDate() *CustomTypes.DATETIME {
	if x != nil {
		return x.BirthDate
	}
	return nil
}

func (x *Customer) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *Customer) GetCustomerPhoneContacts() []*CustomerPhoneContacts {
	if x != nil {
		return x.CustomerPhoneContacts
	}
	return nil
}

func (x *Customer) GetCustomerAddress() []*CustomerAddress {
	if x != nil {
		return x.CustomerAddress
	}
	return nil
}

func (x *Customer) GetCustomerPaymentCredentials() []*CustomerPaymentCredentials {
	if x != nil {
		return x.CustomerPaymentCredentials
	}
	return nil
}

type CustomerPhoneContacts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *CustomTypes.GUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Number      string            `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	TypeId      int32             `protobuf:"varint,3,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	CountryCode int32             `protobuf:"varint,4,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	CountryId   int32             `protobuf:"varint,5,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
}

func (x *CustomerPhoneContacts) Reset() {
	*x = CustomerPhoneContacts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_hmartins98_Contracts_Customer_Customer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerPhoneContacts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerPhoneContacts) ProtoMessage() {}

func (x *CustomerPhoneContacts) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_hmartins98_Contracts_Customer_Customer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerPhoneContacts.ProtoReflect.Descriptor instead.
func (*CustomerPhoneContacts) Descriptor() ([]byte, []int) {
	return file_github_com_hmartins98_Contracts_Customer_Customer_proto_rawDescGZIP(), []int{1}
}

func (x *CustomerPhoneContacts) GetId() *CustomTypes.GUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *CustomerPhoneContacts) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *CustomerPhoneContacts) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *CustomerPhoneContacts) GetCountryCode() int32 {
	if x != nil {
		return x.CountryCode
	}
	return 0
}

func (x *CustomerPhoneContacts) GetCountryId() int32 {
	if x != nil {
		return x.CountryId
	}
	return 0
}

type CustomerAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *CustomTypes.GUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Address   string            `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	ZipCode   string            `protobuf:"bytes,3,opt,name=zip_code,json=zipCode,proto3" json:"zip_code,omitempty"`
	CountryId int32             `protobuf:"varint,4,opt,name=country_id,json=countryId,proto3" json:"country_id,omitempty"`
}

func (x *CustomerAddress) Reset() {
	*x = CustomerAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_hmartins98_Contracts_Customer_Customer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerAddress) ProtoMessage() {}

func (x *CustomerAddress) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_hmartins98_Contracts_Customer_Customer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerAddress.ProtoReflect.Descriptor instead.
func (*CustomerAddress) Descriptor() ([]byte, []int) {
	return file_github_com_hmartins98_Contracts_Customer_Customer_proto_rawDescGZIP(), []int{2}
}

func (x *CustomerAddress) GetId() *CustomTypes.GUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *CustomerAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CustomerAddress) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

func (x *CustomerAddress) GetCountryId() int32 {
	if x != nil {
		return x.CountryId
	}
	return 0
}

type CustomerPaymentCredentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *CustomTypes.GUID     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Number         string                `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	TypeId         int32                 `protobuf:"varint,3,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	ExpirationDate *CustomTypes.DATETIME `protobuf:"bytes,4,opt,name=ExpirationDate,proto3" json:"ExpirationDate,omitempty"`
}

func (x *CustomerPaymentCredentials) Reset() {
	*x = CustomerPaymentCredentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_hmartins98_Contracts_Customer_Customer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerPaymentCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerPaymentCredentials) ProtoMessage() {}

func (x *CustomerPaymentCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_hmartins98_Contracts_Customer_Customer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerPaymentCredentials.ProtoReflect.Descriptor instead.
func (*CustomerPaymentCredentials) Descriptor() ([]byte, []int) {
	return file_github_com_hmartins98_Contracts_Customer_Customer_proto_rawDescGZIP(), []int{3}
}

func (x *CustomerPaymentCredentials) GetId() *CustomTypes.GUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *CustomerPaymentCredentials) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *CustomerPaymentCredentials) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *CustomerPaymentCredentials) GetExpirationDate() *CustomTypes.DATETIME {
	if x != nil {
		return x.ExpirationDate
	}
	return nil
}

type CustomerId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *CustomTypes.GUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CustomerId) Reset() {
	*x = CustomerId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_hmartins98_Contracts_Customer_Customer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerId) ProtoMessage() {}

func (x *CustomerId) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_hmartins98_Contracts_Customer_Customer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerId.ProtoReflect.Descriptor instead.
func (*CustomerId) Descriptor() ([]byte, []int) {
	return file_github_com_hmartins98_Contracts_Customer_Customer_proto_rawDescGZIP(), []int{4}
}

func (x *CustomerId) GetId() *CustomTypes.GUID {
	if x != nil {
		return x.Id
	}
	return nil
}

var File_github_com_hmartins98_Contracts_Customer_Customer_proto protoreflect.FileDescriptor

var file_github_com_hmartins98_Contracts_Customer_Customer_proto_rawDesc = []byte{
	0x0a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x6d, 0x61,
	0x72, 0x74, 0x69, 0x6e, 0x73, 0x39, 0x38, 0x2f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x2f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2f, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x1a, 0x3d, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x6d, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x73, 0x39,
	0x38, 0x2f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x2f, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x03, 0x0a, 0x08, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x47, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x0a, 0x62, 0x69, 0x72, 0x74, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45,
	0x52, 0x09, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x5e, 0x0a, 0x17, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x15, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x73, 0x12, 0x4b, 0x0a, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x6d, 0x0a, 0x1c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x52, 0x1a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x22, 0xa1, 0x01, 0x0a, 0x15, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x15, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x47, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x0f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x15, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x47, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x7a, 0x69, 0x70, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x49, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x1a, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x12, 0x15, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x47, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x0e, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x44, 0x41, 0x54, 0x45, 0x54, 0x49, 0x4d, 0x45, 0x52, 0x0e, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x22, 0x23, 0x0a, 0x0a,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x47, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69,
	0x64, 0x32, 0x8c, 0x02, 0x0a, 0x10, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x46, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x1a, 0x19, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x46,
	0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x1b,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x19, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x1a, 0x05, 0x2e, 0x42, 0x4f, 0x4f, 0x4c, 0x12, 0x34, 0x0a, 0x0e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x05, 0x2e, 0x42, 0x4f, 0x4f, 0x4c,
	0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68,
	0x6d, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x73, 0x39, 0x38, 0x2f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x73, 0x2f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_hmartins98_Contracts_Customer_Customer_proto_rawDescOnce sync.Once
	file_github_com_hmartins98_Contracts_Customer_Customer_proto_rawDescData = file_github_com_hmartins98_Contracts_Customer_Customer_proto_rawDesc
)

func file_github_com_hmartins98_Contracts_Customer_Customer_proto_rawDescGZIP() []byte {
	file_github_com_hmartins98_Contracts_Customer_Customer_proto_rawDescOnce.Do(func() {
		file_github_com_hmartins98_Contracts_Customer_Customer_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_hmartins98_Contracts_Customer_Customer_proto_rawDescData)
	})
	return file_github_com_hmartins98_Contracts_Customer_Customer_proto_rawDescData
}

var file_github_com_hmartins98_Contracts_Customer_Customer_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_github_com_hmartins98_Contracts_Customer_Customer_proto_goTypes = []interface{}{
	(*Customer)(nil),                   // 0: CustomerPackage.Customer
	(*CustomerPhoneContacts)(nil),      // 1: CustomerPackage.CustomerPhoneContacts
	(*CustomerAddress)(nil),            // 2: CustomerPackage.CustomerAddress
	(*CustomerPaymentCredentials)(nil), // 3: CustomerPackage.CustomerPaymentCredentials
	(*CustomerId)(nil),                 // 4: CustomerPackage.CustomerId
	(*CustomTypes.GUID)(nil),           // 5: GUID
	(*CustomTypes.DATETIME)(nil),       // 6: DATETIME
	(*CustomTypes.BOOL)(nil),           // 7: BOOL
}
var file_github_com_hmartins98_Contracts_Customer_Customer_proto_depIdxs = []int32{
	5,  // 0: CustomerPackage.Customer.id:type_name -> GUID
	6,  // 1: CustomerPackage.Customer.birth_date:type_name -> DATETIME
	1,  // 2: CustomerPackage.Customer.customer_phone_contacts:type_name -> CustomerPackage.CustomerPhoneContacts
	2,  // 3: CustomerPackage.Customer.customer_address:type_name -> CustomerPackage.CustomerAddress
	3,  // 4: CustomerPackage.Customer.customer_payment_credentials:type_name -> CustomerPackage.CustomerPaymentCredentials
	5,  // 5: CustomerPackage.CustomerPhoneContacts.id:type_name -> GUID
	5,  // 6: CustomerPackage.CustomerAddress.id:type_name -> GUID
	5,  // 7: CustomerPackage.CustomerPaymentCredentials.id:type_name -> GUID
	6,  // 8: CustomerPackage.CustomerPaymentCredentials.ExpirationDate:type_name -> DATETIME
	5,  // 9: CustomerPackage.CustomerId.id:type_name -> GUID
	0,  // 10: CustomerPackage.CustomerContract.CreateCustomer:input_type -> CustomerPackage.Customer
	4,  // 11: CustomerPackage.CustomerContract.ReadCustomer:input_type -> CustomerPackage.CustomerId
	0,  // 12: CustomerPackage.CustomerContract.UpdateCustomer:input_type -> CustomerPackage.Customer
	4,  // 13: CustomerPackage.CustomerContract.DeleteCustomer:input_type -> CustomerPackage.CustomerId
	0,  // 14: CustomerPackage.CustomerContract.CreateCustomer:output_type -> CustomerPackage.Customer
	0,  // 15: CustomerPackage.CustomerContract.ReadCustomer:output_type -> CustomerPackage.Customer
	7,  // 16: CustomerPackage.CustomerContract.UpdateCustomer:output_type -> BOOL
	7,  // 17: CustomerPackage.CustomerContract.DeleteCustomer:output_type -> BOOL
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_github_com_hmartins98_Contracts_Customer_Customer_proto_init() }
func file_github_com_hmartins98_Contracts_Customer_Customer_proto_init() {
	if File_github_com_hmartins98_Contracts_Customer_Customer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_hmartins98_Contracts_Customer_Customer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Customer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_hmartins98_Contracts_Customer_Customer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerPhoneContacts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_hmartins98_Contracts_Customer_Customer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_hmartins98_Contracts_Customer_Customer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerPaymentCredentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_hmartins98_Contracts_Customer_Customer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_hmartins98_Contracts_Customer_Customer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_hmartins98_Contracts_Customer_Customer_proto_goTypes,
		DependencyIndexes: file_github_com_hmartins98_Contracts_Customer_Customer_proto_depIdxs,
		MessageInfos:      file_github_com_hmartins98_Contracts_Customer_Customer_proto_msgTypes,
	}.Build()
	File_github_com_hmartins98_Contracts_Customer_Customer_proto = out.File
	file_github_com_hmartins98_Contracts_Customer_Customer_proto_rawDesc = nil
	file_github_com_hmartins98_Contracts_Customer_Customer_proto_goTypes = nil
	file_github_com_hmartins98_Contracts_Customer_Customer_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CustomerContractClient is the client API for CustomerContract service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomerContractClient interface {
	CreateCustomer(ctx context.Context, in *Customer, opts ...grpc.CallOption) (*Customer, error)
	ReadCustomer(ctx context.Context, in *CustomerId, opts ...grpc.CallOption) (*Customer, error)
	UpdateCustomer(ctx context.Context, in *Customer, opts ...grpc.CallOption) (*CustomTypes.BOOL, error)
	DeleteCustomer(ctx context.Context, in *CustomerId, opts ...grpc.CallOption) (*CustomTypes.BOOL, error)
}

type customerContractClient struct {
	cc grpc.ClientConnInterface
}

func NewCustomerContractClient(cc grpc.ClientConnInterface) CustomerContractClient {
	return &customerContractClient{cc}
}

func (c *customerContractClient) CreateCustomer(ctx context.Context, in *Customer, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/CustomerPackage.CustomerContract/CreateCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerContractClient) ReadCustomer(ctx context.Context, in *CustomerId, opts ...grpc.CallOption) (*Customer, error) {
	out := new(Customer)
	err := c.cc.Invoke(ctx, "/CustomerPackage.CustomerContract/ReadCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerContractClient) UpdateCustomer(ctx context.Context, in *Customer, opts ...grpc.CallOption) (*CustomTypes.BOOL, error) {
	out := new(CustomTypes.BOOL)
	err := c.cc.Invoke(ctx, "/CustomerPackage.CustomerContract/UpdateCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerContractClient) DeleteCustomer(ctx context.Context, in *CustomerId, opts ...grpc.CallOption) (*CustomTypes.BOOL, error) {
	out := new(CustomTypes.BOOL)
	err := c.cc.Invoke(ctx, "/CustomerPackage.CustomerContract/DeleteCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomerContractServer is the server API for CustomerContract service.
type CustomerContractServer interface {
	CreateCustomer(context.Context, *Customer) (*Customer, error)
	ReadCustomer(context.Context, *CustomerId) (*Customer, error)
	UpdateCustomer(context.Context, *Customer) (*CustomTypes.BOOL, error)
	DeleteCustomer(context.Context, *CustomerId) (*CustomTypes.BOOL, error)
}

// UnimplementedCustomerContractServer can be embedded to have forward compatible implementations.
type UnimplementedCustomerContractServer struct {
}

func (*UnimplementedCustomerContractServer) CreateCustomer(context.Context, *Customer) (*Customer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCustomer not implemented")
}
func (*UnimplementedCustomerContractServer) ReadCustomer(context.Context, *CustomerId) (*Customer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadCustomer not implemented")
}
func (*UnimplementedCustomerContractServer) UpdateCustomer(context.Context, *Customer) (*CustomTypes.BOOL, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCustomer not implemented")
}
func (*UnimplementedCustomerContractServer) DeleteCustomer(context.Context, *CustomerId) (*CustomTypes.BOOL, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCustomer not implemented")
}

func RegisterCustomerContractServer(s *grpc.Server, srv CustomerContractServer) {
	s.RegisterService(&_CustomerContract_serviceDesc, srv)
}

func _CustomerContract_CreateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Customer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerContractServer).CreateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CustomerPackage.CustomerContract/CreateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerContractServer).CreateCustomer(ctx, req.(*Customer))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerContract_ReadCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerContractServer).ReadCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CustomerPackage.CustomerContract/ReadCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerContractServer).ReadCustomer(ctx, req.(*CustomerId))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerContract_UpdateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Customer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerContractServer).UpdateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CustomerPackage.CustomerContract/UpdateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerContractServer).UpdateCustomer(ctx, req.(*Customer))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerContract_DeleteCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerContractServer).DeleteCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CustomerPackage.CustomerContract/DeleteCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerContractServer).DeleteCustomer(ctx, req.(*CustomerId))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomerContract_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CustomerPackage.CustomerContract",
	HandlerType: (*CustomerContractServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCustomer",
			Handler:    _CustomerContract_CreateCustomer_Handler,
		},
		{
			MethodName: "ReadCustomer",
			Handler:    _CustomerContract_ReadCustomer_Handler,
		},
		{
			MethodName: "UpdateCustomer",
			Handler:    _CustomerContract_UpdateCustomer_Handler,
		},
		{
			MethodName: "DeleteCustomer",
			Handler:    _CustomerContract_DeleteCustomer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/hmartins98/Contracts/Customer/Customer.proto",
}
